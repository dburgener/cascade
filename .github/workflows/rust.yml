name: Rust

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Build
      run: .github/workflows/build.sh
  checks:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        # We lock our failing tests on a known good version and
        # informationally check the latest as well.  We should
        # regularly update the known good once we know that tests
        # pass on it
        rust-toolchain: [ 1.66, stable, nightly ]
    steps:
    - uses: actions/checkout@v3
    - name: Setup
      run: .github/workflows/restore-checks.sh ${{ matrix.rust-toolchain }}
    - name: Check format
      run: .github/workflows/format.sh ${{ matrix.rust-toolchain }}
    - name: Check clippy
      id: clippy
      run: .github/workflows/clippy.sh ${{ matrix.rust-toolchain }}
      continue-on-error: ${{ matrix.rust-toolchain != '1.66' }}
    - name: Notify clippy failure
      if: ${{ (steps.clippy.outcome != steps.clippy.conclusion) && (matrix.rust-toolchain != '1.66') }}
      uses: actions/github-script@v6
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: 'Stable clippy has failed for this run. A maintainer should check the logs. If known good clippy passed, this is non-fatal to the PR.'
          })
    - name: Check docs
      run: .github/workflows/doc.sh ${{ matrix.rust-toolchain }}
  test:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      fail-fast: false
      matrix:
        # 2.7 is the version in Ubuntu 18.04
        # 3.0 is the version in Ubuntu 20.04
        # 2.9 and earlier do not yet support policy.32 and
        # we default to policy.32 for now.  Once we support
        # configurable policy versions, we should be able to successfully
        # test against 2.7-2.9
        selinux-version: [ secilc-3.0, secilc-3.1, 3.2, 3.3, 3.4, 3.5-rc2 ]
        rust-toolchain: [ stable]
        include:
          - selinux-version: '3.4'
            rust-toolchain: nightly
    steps:
    - uses: actions/checkout@v3
    - name: Checkout selinux userspace
      uses: actions/checkout@v3
      with:
              repository: SELinuxProject/selinux
              ref: refs/tags/${{ matrix.selinux-version }}
              path: selinux
    - name: Setup
      run: .github/workflows/restore-test.sh ${{ matrix.rust-toolchain }}
    - name: Run tests
      id: test
      run: .github/workflows/test.sh ${{ matrix.rust-toolchain }}
      continue-on-error: ${{ matrix.rust-toolchain == 'nightly' }}
    - name: Notify nightly test failure
      if: ${{ (steps.test.outcome != steps.test.conclusion) && (matrix.rust-toolchain == 'nightly') }}
      uses: actions/github-script@v6
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: 'Nightly test has failed for this run. A maintainer should check the logs. If known good clippy passed, this is non-fatal to the PR.'
          })

